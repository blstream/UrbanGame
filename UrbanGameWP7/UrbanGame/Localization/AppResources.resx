<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>about</value>
  </data>
  <data name="AboutText1" xml:space="preserve">
    <value>What is urban game? That's great What is urban game? That's great question, well it's something!
                               well it's something!</value>
  </data>
  <data name="AboutText2" xml:space="preserve">
    <value>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricies turpis et augue pretium nec rhoncus odio congue. Duis faucibus accumsan eros sed volutpat. Nulla lorem urna, adipiscing non euismod non, egestas sit amet ligula. Maecenas condimentum tellus lacus, ornare mattis lacus.</value>
  </data>
  <data name="Accomplished" xml:space="preserve">
    <value>accomplished</value>
  </data>
  <data name="Active" xml:space="preserve">
    <value>acitve</value>
  </data>
  <data name="Alerts" xml:space="preserve">
    <value>alerts</value>
  </data>
  <data name="BonusTask" xml:space="preserve">
    <value>bonus task found</value>
  </data>
  <data name="ByOperator" xml:space="preserve">
    <value>by</value>
  </data>
  <data name="Cancelled" xml:space="preserve">
    <value>cancelled</value>
  </data>
  <data name="Completed" xml:space="preserve">
    <value>completed</value>
  </data>
  <data name="CurrentRank" xml:space="preserve">
    <value>current rank:</value>
  </data>
  <data name="Day" xml:space="preserve">
    <value>day</value>
  </data>
  <data name="Days" xml:space="preserve">
    <value>days</value>
  </data>
  <data name="DayShortcut" xml:space="preserve">
    <value>d</value>
  </data>
  <data name="Difficulty" xml:space="preserve">
    <value>difficulty:</value>
  </data>
  <data name="Duration" xml:space="preserve">
    <value>duration:</value>
  </data>
  <data name="Easy" xml:space="preserve">
    <value>easy</value>
  </data>
  <data name="GameEnd" xml:space="preserve">
    <value>end:</value>
  </data>
  <data name="GameStart" xml:space="preserve">
    <value>start:</value>
  </data>
  <data name="GameStateEnded" xml:space="preserve">
    <value>ended</value>
  </data>
  <data name="GameStateInactive" xml:space="preserve">
    <value>inactive</value>
  </data>
  <data name="GameStateJoined" xml:space="preserve">
    <value>joined</value>
  </data>
  <data name="GameStateNone" xml:space="preserve">
    <value />
  </data>
  <data name="GameStateWithdraw" xml:space="preserve">
    <value>withdraw</value>
  </data>
  <data name="GameStateWon" xml:space="preserve">
    <value>won</value>
  </data>
  <data name="GameType" xml:space="preserve">
    <value>game type:</value>
  </data>
  <data name="GameTypeRace" xml:space="preserve">
    <value>complete all tasks first</value>
  </data>
  <data name="GameTypeScoreAttack" xml:space="preserve">
    <value>gather as many points as possible</value>
  </data>
  <data name="Hard" xml:space="preserve">
    <value>hard</value>
  </data>
  <data name="HighScores" xml:space="preserve">
    <value>high scores</value>
  </data>
  <data name="HoursShortcut" xml:space="preserve">
    <value>h</value>
  </data>
  <data name="Inactive" xml:space="preserve">
    <value>inactive</value>
  </data>
  <data name="JoinIn" xml:space="preserve">
    <value>Join in</value>
  </data>
  <data name="JoinOneGame" xml:space="preserve">
    <value>Please, choose one and join into.</value>
  </data>
  <data name="JoinOrLogIn" xml:space="preserve">
    <value>Join to the Urban Game or Log in!</value>
  </data>
  <data name="Leave" xml:space="preserve">
    <value>Leave</value>
  </data>
  <data name="LogIn" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="Medium" xml:space="preserve">
    <value>medium</value>
  </data>
  <data name="Messages" xml:space="preserve">
    <value>messages</value>
  </data>
  <data name="MinutesShortcut" xml:space="preserve">
    <value>m</value>
  </data>
  <data name="MyAccount" xml:space="preserve">
    <value>my account</value>
  </data>
  <data name="MyGames" xml:space="preserve">
    <value>my games</value>
  </data>
  <data name="Nearby" xml:space="preserve">
    <value>nearby</value>
  </data>
  <data name="NoGamesPlaying" xml:space="preserve">
    <value>Apparently you don't play in any game.</value>
  </data>
  <data name="Overview" xml:space="preserve">
    <value>overview</value>
  </data>
  <data name="Players" xml:space="preserve">
    <value>players:</value>
  </data>
  <data name="Points" xml:space="preserve">
    <value>points</value>
  </data>
  <data name="Prizes" xml:space="preserve">
    <value>prizes</value>
  </data>
  <data name="Quests" xml:space="preserve">
    <value>quests</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="Scores" xml:space="preserve">
    <value>high scores</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>start:</value>
  </data>
  <data name="Started" xml:space="preserve">
    <value>started</value>
  </data>
  <data name="Tasks" xml:space="preserve">
    <value>tasks</value>
  </data>
  <data name="ToEnd" xml:space="preserve">
    <value>TO END</value>
  </data>
  <data name="ToEndLowCase" xml:space="preserve">
    <value>to end</value>
  </data>
  <data name="Undefinied" xml:space="preserve">
    <value>undefinied</value>
  </data>
  <data name="Answer" xml:space="preserve">
    <value>answer</value>
  </data>
  <data name="AnswerGPS" xml:space="preserve">
    <value>If you think this is the right spot, please submit your coordinates to check.</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>submit</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>description</value>
  </data>
  <data name="AbandonGame" xml:space="preserve">
    <value>Abandon game</value>
  </data>
  <data name="Operator" xml:space="preserve">
    <value>Operator</value>
  </data>
  <data name="Games" xml:space="preserve">
    <value>GAMES</value>
  </data>
  <data name="Urban" xml:space="preserve">
    <value>URBAN</value>
  </data>
  <data name="Accepted" xml:space="preserve">
    <value>accepted</value>
  </data>
  <data name="Rejected" xml:space="preserve">
    <value>rejected</value>
  </data>
  <data name="SolutionStatusChanged" xml:space="preserve">
    <value>Solution status has changed to</value>
  </data>
  <data name="PointsUpCase" xml:space="preserve">
    <value>POINTS:</value>
  </data>
  <data name="TimeLeft" xml:space="preserve">
    <value>TIME LEFT:</value>
  </data>
  <data name="NotRepeatable" xml:space="preserve">
    <value>not repeatable</value>
  </data>
  <data name="PointsShort" xml:space="preserve">
    <value>p.</value>
  </data>
  <data name="Repeatable" xml:space="preserve">
    <value>repeatable</value>
  </data>
  <data name="Sending" xml:space="preserve">
    <value>sending</value>
  </data>
  <data name="ByOperatorUpCase" xml:space="preserve">
    <value>BY</value>
  </data>
  <data name="Correct" xml:space="preserve">
    <value>CORRECT!</value>
  </data>
  <data name="Rank" xml:space="preserve">
    <value>rank</value>
  </data>
  <data name="NotSoGreat" xml:space="preserve">
    <value>NOT SO GREAT!</value>
  </data>
  <data name="Wrong" xml:space="preserve">
    <value>WRONG!</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>email</value>
  </data>
  <data name="Join" xml:space="preserve">
    <value>join</value>
  </data>
  <data name="LoginLabel" xml:space="preserve">
    <value>login</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>password</value>
  </data>
  <data name="RepeatPassword" xml:space="preserve">
    <value>repeat password</value>
  </data>
  <data name="AccountCreated" xml:space="preserve">
    <value>ACCOUNT CREATED!</value>
  </data>
  <data name="ConfirmationEmail" xml:space="preserve">
    <value>confirmation email has been sent</value>
  </data>
  <data name="CreatingAccount" xml:space="preserve">
    <value>creating account</value>
  </data>
  <data name="EmptyLogin" xml:space="preserve">
    <value>You must enter login!</value>
  </data>
  <data name="EmptyPassword" xml:space="preserve">
    <value>You must enter password!</value>
  </data>
  <data name="IncorrectEmail" xml:space="preserve">
    <value>Incorrect email!</value>
  </data>
  <data name="LoggedIn" xml:space="preserve">
    <value>You are logged in!</value>
  </data>
  <data name="LogginIn" xml:space="preserve">
    <value>logging in</value>
  </data>
  <data name="RepeatYourPassword" xml:space="preserve">
    <value>You must enter twice the same password</value>
  </data>
  <data name="Incorrect" xml:space="preserve">
    <value>Incorrect</value>
  </data>
  <data name="IncorrectLogin" xml:space="preserve">
    <value>Incorrect password or login</value>
  </data>
  <data name="GameChangedToast" xml:space="preserve">
    <value>Game details have changed. Tap to see differences.</value>
  </data>
  <data name="LoginUnavailable" xml:space="preserve">
    <value>This login has been already used</value>
  </data>
  <data name="ServiceTimeout" xml:space="preserve">
    <value>Service timeout</value>
  </data>
  <data name="UnknownError" xml:space="preserve">
    <value>Serviced returned unknown error</value>
  </data>
  <data name="PasswordRecovery" xml:space="preserve">
    <value>password recovery</value>
  </data>
  <data name="ForgotPassword" xml:space="preserve">
    <value>forgot password</value>
  </data>
  <data name="NextInstructions" xml:space="preserve">
    <value>Next instructions has been sent to provided e-mail address</value>
  </data>
  <data name="ProvideEmail" xml:space="preserve">
    <value>Provide e-mail address connected with your account to recover your password.</value>
  </data>
  <data name="NotLogged" xml:space="preserve">
    <value>You are not logged in.</value>
  </data>
  <data name="PleaseLog" xml:space="preserve">
    <value>Please log in to see list of your games.</value>
  </data>
  <data name="PreviousGames" xml:space="preserve">
    <value>previous games</value>
  </data>
  <data name="End" xml:space="preserve">
    <value>end:</value>
  </data>
  <data name="Left" xml:space="preserve">
    <value>left</value>
  </data>
  <data name="DelayedSolution" xml:space="preserve">
    <value>Solution sent, but results will be available later.</value>
  </data>
</root>