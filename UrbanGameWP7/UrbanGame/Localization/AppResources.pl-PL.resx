<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ByOperator" xml:space="preserve">
    <value>od</value>
  </data>
  <data name="Completed" xml:space="preserve">
    <value>zakończono</value>
  </data>
  <data name="Day" xml:space="preserve">
    <value>dzień</value>
  </data>
  <data name="Days" xml:space="preserve">
    <value>dni</value>
  </data>
  <data name="Difficulty" xml:space="preserve">
    <value>poziom trudności:</value>
  </data>
  <data name="Easy" xml:space="preserve">
    <value>łatwe</value>
  </data>
  <data name="GameEnd" xml:space="preserve">
    <value>zakończenie:</value>
  </data>
  <data name="GameStart" xml:space="preserve">
    <value>rozpoczęcie:</value>
  </data>
  <data name="GameTypeRace" xml:space="preserve">
    <value>ukończ zadania jako pierwszy</value>
  </data>
  <data name="GameTypeQuiz" xml:space="preserve">
    <value>zdobądź jak najwięcej punktów</value>
  </data>
  <data name="Hard" xml:space="preserve">
    <value>trudne</value>
  </data>
  <data name="JoinIn" xml:space="preserve">
    <value>Dołącz</value>
  </data>
  <data name="Medium" xml:space="preserve">
    <value>średnie</value>
  </data>
  <data name="Overview" xml:space="preserve">
    <value>o grze</value>
  </data>
  <data name="Players" xml:space="preserve">
    <value>graczy:</value>
  </data>
  <data name="Prizes" xml:space="preserve">
    <value>nagrody</value>
  </data>
  <data name="Started" xml:space="preserve">
    <value>rozpoczęto</value>
  </data>
  <data name="Undefinied" xml:space="preserve">
    <value>nieokreślone</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>o grze</value>
  </data>
  <data name="AboutText1" xml:space="preserve">
    <value>Co to jest urban game? To świetne pytanie, tak więc to jest coś!</value>
  </data>
  <data name="AboutText2" xml:space="preserve">
    <value>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricies turpis et augue pretium nec rhoncus odio congue. Duis faucibus accumsan eros sed volutpat. Nulla lorem urna, adipiscing non euismod non, egestas sit amet ligula. Maecenas condimentum tellus lacus, ornare mattis lacus.</value>
  </data>
  <data name="MyAccount" xml:space="preserve">
    <value>moje konto</value>
  </data>
  <data name="MyGames" xml:space="preserve">
    <value>moje gry</value>
  </data>
  <data name="Nearby" xml:space="preserve">
    <value>w pobliżu</value>
  </data>
  <data name="JoinOneGame" xml:space="preserve">
    <value>Proszę, wybierz jedną i dołącz.</value>
  </data>
  <data name="JoinOrLogIn" xml:space="preserve">
    <value>Dołącz do Urban Game lub Zaloguj się!</value>
  </data>
  <data name="LogIn" xml:space="preserve">
    <value>Zaloguj</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Wyloguj</value>
  </data>
  <data name="MyPreviousGame" xml:space="preserve">
    <value>moje poprzednie gry</value>
  </data>
  <data name="NoGamesPlaying" xml:space="preserve">
    <value>Najwyraźniej nie grasz w żadną grę.</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Odśwież</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Szukaj</value>
  </data>
  <data name="Leave" xml:space="preserve">
    <value>Opuść</value>
  </data>
</root>