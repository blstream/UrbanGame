var newGameCtrl;var time_regexp;
newGameCtrl=app.controller("newGameCtrl",["$scope","$location","$route","$rootScope","Games",function($scope,$location,$route,$rootScope,Games){$scope.steps=[{no:1,name:"Data"},{no:2,name:"Tasks"},{no:3,name:"Skin"},{no:4,name:"Publish"}];$scope.gameid=null;$scope.game={name:"",description:"",location:"",startTime:"",startDate:null,endTime:"",endDate:null,winning:"max_points",winningNum:1,diff:"easy",playersNum:null,awards:""};$scope.selection=$scope.steps[0];$scope.getCurrentStepIndex=function(){return _.indexOf($scope.steps,
$scope.selection)};$scope.isDisabled=function(index){if(index>$scope.getCurrentStepIndex()+1||$scope.form.$invalid&&index>$scope.getCurrentStepIndex())return true};$scope.isLast=function(){return!$scope.hasNextStep()};$scope.goToStep=function(index){if(!_.isUndefined($scope.steps[index]))return $scope.selection=$scope.steps[index]};$scope.hasNextStep=function(){var nextStep;var stepIndex;stepIndex=$scope.getCurrentStepIndex();nextStep=stepIndex+1;return!_.isUndefined($scope.steps[nextStep])};$scope.hasPreviousStep=
function(){var previousStep;var stepIndex;stepIndex=$scope.getCurrentStepIndex();previousStep=stepIndex-1;return!_.isUndefined($scope.steps[previousStep])};$scope.incrementStepIfValid=function(){if(!$scope.form.$invalid)return $scope.incrementStep()};$scope.incrementStep=function(){var nextStep;var stepIndex;if($scope.hasNextStep()){stepIndex=$scope.getCurrentStepIndex();if(stepIndex===0)return $scope.savegame();else{if(stepIndex===1)!($scope.geolocationBound=false);nextStep=stepIndex+1;return $scope.selection=
$scope.steps[nextStep]}}};$scope.decrementStep=function(){var previousStep;var stepIndex;if($scope.hasPreviousStep()){stepIndex=$scope.getCurrentStepIndex();previousStep=stepIndex-1;$scope.selection=$scope.steps[previousStep];if($scope.getCurrentStepIndex()===0)return $scope.onTab1Switch()}};$scope.savegame=function(){var notSetByUser;if($scope.game.playersNum===null){$scope.game.playersNum=1E6;notSetByUser=true}if($scope.gameid===null||_.isUndefined($scope.gameid))Games.save({game:$scope.game},function(data){$scope.gameid=
data.id;return $scope.selection=$scope.steps[$scope.getCurrentStepIndex()+1]},function(error){return alert("Error occured while saving a game "+error)});else Games.update({id:$scope.gameid,game:$scope.game},function(data){$scope.gameid=data.id;return $scope.selection=$scope.steps[$scope.getCurrentStepIndex()+1]},function(error){return alert("Error occured while updating a game "+error)});if(notSetByUser)return $scope.game.playersNum=null};$scope.publishgame=function(){return alert("published")};$scope.isValidName=
function(){return Games.checkName({name:$scope.game.name},function(result){if(result.valid)return $scope.form.$setValidity("nameunique",true);else return $scope.form.$setValidity("nameunique",false)},function(error){return alert("Error occured while checking if game name is unique "+error)})};$scope.incrementPlayersNum=function(){if($scope.game.playersNum===null)return $scope.game.playersNum=2;else return $scope.game.playersNum+=1};$scope.decrementPlayersNum=function(){if($scope.game.playersNum>2)return $scope.game.playersNum-=
1;else return $scope.game.playersNum=null};$scope.incrementWinningNum=function(){return $scope.game.winningNum+=1};$scope.decrementWinningNum=function(){if($scope.game.winningNum>1)return $scope.game.winningNum-=1};$scope.timezone="GMT"+((new Date).getTimezoneOffset()>0?"":"+")+(new Date).getTimezoneOffset()/-60;$scope.$watch("[game.winningNum, game.playersNum]",function(){if($scope.game.winningNum===void 0)return $scope.form.$setValidity("morewinnersthanplayers",false);else if($scope.game.playersNum!==
null)if($scope.game.playersNum>$scope.game.winningNum)return $scope.form.$setValidity("morewinnersthanplayers",true);else return $scope.form.$setValidity("morewinnersthanplayers",false);else return $scope.form.$setValidity("morewinnersthanplayers",true)},true);$scope.onTab1Switch=function(){return setTimeout(function(){$("#locationInput").on("click",function(){if(!$scope.geolocationBound){$("#locationInput").geocomplete({types:["(cities)"]});return $scope.geolocationBound=true}});$("#nameInput").on("keyup",
function(){if($scope.game.name!==void 0)return $scope.isValidName()});$("#locationInput").on("click",function(){return $("#locationInput").bind("propertychange blur input paste",function(event){return setTimeout(function(){return $scope.game.loc=$("#locationInput").val()},500)})});return $("#startTime, #startDate, #endTime, #endDate").bind("input blur",function(event){var from;var to;if($scope.game.startDate instanceof Date&&$scope.game.endDate instanceof Date&&$scope.form.gStartTime.$valid&&$scope.form.gEndTime.$valid){from=
new Date($scope.game.startDate.getTime());to=new Date($scope.game.endDate.getTime());from.setHours(parseInt($scope.game.startTime.split(":")[0]),parseInt($scope.game.startTime.split(":")[1]));to.setHours(parseInt($scope.game.endTime.split(":")[0]),parseInt($scope.game.endTime.split(":")[1]));if(from.getTime()>to.getTime())return $scope.form.$setValidity("dates",false);else return $scope.form.$setValidity("dates",true)}else return $scope.form.$setValidity("dates",true)})},200)};return $(function(){return $scope.onTab1Switch()})}]);
time_regexp=/^(20|21|22|23|[01]\d|\d)(:[0-5]\d)$/;app.directive("time",function(){return{require:"ngModel",link:function(scope,elm,attr,ctrl){return ctrl.$parsers.unshift(function(viewValue){if(time_regexp.test(viewValue)){ctrl.$setValidity("time",true);return viewValue}else{ctrl.$setValidity("time",false);return}})}}});